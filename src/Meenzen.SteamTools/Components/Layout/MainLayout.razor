@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Href="https://github.com/meenzen/steam-tools" Target="_blank"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">SteamTools</MudText>
            <MudTooltip Text="@Version">
                <MudText Typo="Typo.caption">@ShortVersion</MudText>
            </MudTooltip>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <CredentialsWizard OnSave="@StateHasChanged"/>
        <MudContainer MaxWidth="MaxWidth.Large" Class="py-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    bool _drawerOpen = true;

    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    private string Version { get; init; } = $"v{ThisAssembly.AssemblyInformationalVersion}";
    private string ShortVersion { get; init; } = $"v{ThisAssembly.AssemblyInformationalVersion.Split('-')[0]}";


    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }
}