@page "/owned-games"
@using Meenzen.SteamTools.Models
@using Meenzen.SteamTools.Services
@inject SteamApi Api
@inject ISnackbar Snackbar
@inject ILogger<PlayTimeCalculator> Logger

<PageTitle>SteamTools - Owned Games</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraSmall">
    <MudStack Row="false" Justify="Justify.Center">
        <MudCheckBox Label="Include played free games" @bind-Value="@_includeFreeGames"/>
        <MudCheckBox Label="Include games in the free sub" @bind-Value="@_includeFreeSub"/>
        <LoadingButton OnClick="@Load" Loading="@_loading" Text="Load"/>
    </MudStack>
</MudContainer>

@if (_response is not null)
{
    <MudDivider Class="mt-4"/>
    <PlayTimeCalculator Games="@_response.Games"/>
    <OwnedGamesList Games="@_response.Games"/>
}

@code
{
    private OwnedGamesResponse? _response;
    private bool _loading;
    private bool _includeFreeGames = true;
    private bool _includeFreeSub;

    private async Task Load()
    {
        if (_loading)
        {
            return;
        }

        _loading = true;

        try
        {
            SteamResponse<OwnedGamesResponse>? response = await Api.GetOwnedGamesAsync(includePlayedFreeGames: _includeFreeGames, includeFreeSub: _includeFreeSub);
            _response = response?.Response;
        }
        catch (Exception e)
        {
            Snackbar.Add("Error loading owned games", Severity.Error);
            Logger.LogError(e, "Error loading owned games");
        }

        await Task.Delay(500);

        _loading = false;
    }
}
