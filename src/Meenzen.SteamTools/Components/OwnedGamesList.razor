@using Meenzen.SteamTools.Models
@using Meenzen.SteamTools.Extensions

<MudHidden Breakpoint="@Breakpoint.SmAndDown" @bind-Hidden="@_isHidden">
    <MudDataGrid Items="@Games" T="@OwnedGame" Dense="true" FixedHeader="true" RowsPerPage="23" Virtualize="true" OverscanCount="20" Hover="true"
                 ColumnResizeMode="ResizeMode.Container" Height="800px" Class="mt-4" FilterCaseSensitivity="DataGridFilterCaseSensitivity.Ignore">
        <Columns>
            <PropertyColumn Property="@(game => game.Appid)" Filterable="true" Title="AppId" InitialDirection="SortDirection.Ascending"/>
            <PropertyColumn Property="@(game => game.Name)" Filterable="true" Title="Name" HeaderStyle="width: 400px;"/>
            <PropertyColumn Property="@(game => game.LastPlayed.ToUiString())" SortBy="@(game => game.LastPlayed)" Title="Last Played"/>
            <PropertyColumn Property="@(game => game.PlaytimeWindowsForever)" SortBy="@(game => game.PlaytimeWindowsForever)" Title="Windows"/>
            <PropertyColumn Property="@(game => game.PlaytimeLinuxForever.ToUiString())" SortBy="@(game => game.PlaytimeLinuxForever)" Title="Linux"/>
            <PropertyColumn Property="@(game => game.PlaytimeMacForever.ToUiString())" SortBy="@(game => game.PlaytimeMacForever)" Title="Mac"/>
            <PropertyColumn Property="@(game => game.PlaytimeForever.ToUiString())" SortBy="@(game => game.PlaytimeForever)" Title="Total"/>
            <PropertyColumn Property="@(game => (game.Playtime2Weeks ?? 0).ToUiString())" SortBy="@(game => game.Playtime2Weeks ?? 0)" Title="Last 2 Weeks"/>
            <PropertyColumn Property="@(game => game.PlaytimeDisconnected.ToUiString())" SortBy="@(game => game.PlaytimeDisconnected)" Title="Disconnected"/>
            <PropertyColumn Property="@(game => game.HasDlc.ToUiString())" SortBy="@(game => game.HasDlc)" Title="Has DLC"/>
            <PropertyColumn Property="@(game => game.HasWorkshop.ToUiString())" SortBy="@(game => game.HasWorkshop)" Title="Has Workshop"/>
            <PropertyColumn Property="@(game => game.HasMarket.ToUiString())" SortBy="@(game => game.HasMarket)" Title="Has Market"/>
            <PropertyColumn Property="@(game => (game.HasCommunityVisibleStats ?? false).ToUiString())" SortBy="@(game => game.HasCommunityVisibleStats ?? false)" Title="Has Stats"/>
            <PropertyColumn Property="@(game => (game.HasLeaderboards ?? false).ToUiString())" SortBy="@(game => game.HasLeaderboards ?? false)" Title="Has Leaderboards"/>
            <PropertyColumn Property="@(game => game.SortAs ?? string.Empty)" Filterable="true" Title="Sort As" HeaderStyle="width: 400px;"/>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="@OwnedGame" PageSizeOptions="@([23, 50, 100, int.MaxValue])"/>
        </PagerContent>
    </MudDataGrid>
</MudHidden>

@if (_isHidden)
{
    <MudAlert Severity="Severity.Info" Variant="Variant.Filled" Class="mt-4 mb-8" ContentAlignment="HorizontalAlignment.Center">
        Open this app on a larger screen to see a table of your games.
    </MudAlert>
}

@code
{
    private bool _isHidden = true;

    [Parameter, EditorRequired]
    public List<OwnedGame> Games { get; set; } = [];
}
